1、主要使用RESTful架构，通过添加开源框架（cxf或axis）的方式提供WebService支持（需要测试是否兼容？）
2、放弃前端拼凑SQL语句的方式，直接传递数据给后台接口。
3、后台返回的SQL结果考虑两种形式：实体和HashMap。对于常见的多表查询等，提供模版实现。参考JFinal。
4、后台主要分两层，服务层和业务层。服务层主要是访问接口，用于REST资源或WebService方法声明。业务层实现业务逻辑。
5、完善服务层接口管理，有必要提供接口文档。
6、前端同时支持JSON和XML，添加数据处理层，将JSON和XML转换成JS对象
7、前端服务访问后台资源的api格式，推荐使用DSL（jQuery的格式）。但保留原先的格式
8、使用JsDoc生成JS文档。版本提供API文档和使用Demo。
9、REST框架考虑RestEasy和Jersey，两者基本可以互换。
10、JSR311和Maven等的使用生成文档，方便以后大家进行开发。
